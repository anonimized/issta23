--- /src/main/java/org/quixbugs/SHORTEST_PATHS.java	2022-09-14 13:20:12.630107165 -0500
+++ /src/main/java/org/quixbugs/SHORTEST_PATHS.java	2022-09-14 13:20:41.142382570 -0500
@@ -26,27 +26,8 @@
                         weight_by_node.get(edge.get(0))
                                 + weight_by_edge.get(edge),
                         weight_by_node.get(edge.get(1)));
-                weight_by_edge.put(edge, update_weight);
-            }
-        }
-        return weight_by_node;
-    }
-
-    public static Map<String, Integer> shortest_paths(Node source, List<WeightedEdge> weight_by_edge) {
-        Map<String, Integer> weight_by_node = new HashMap<String, Integer>();
-        for (WeightedEdge edge : weight_by_edge) {
-            weight_by_node.put(edge.node1.toString(), INF);
-            weight_by_node.put(edge.node2.toString(), INF);
-        }
 
-        weight_by_node.put(source.getValue(), 0);
-        for (int i = 0; i < weight_by_node.size(); i++) {
-            for (WeightedEdge edge : weight_by_edge) {
-                int update_weight = Math.min(
-                        weight_by_node.get(edge.node1.toString())
-                                + edge.weight,
-                        weight_by_node.get(edge.node2.toString()));
-                edge.weight = update_weight;
+                weight_by_node.put(edge.get(1), update_weight);
             }
         }
         return weight_by_node;
