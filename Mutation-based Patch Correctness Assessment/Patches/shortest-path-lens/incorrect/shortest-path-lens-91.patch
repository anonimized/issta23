--- /src/main/java/org/quixbugs/SHORTEST_PATH_LENGTHS.java	2022-09-21 17:28:27.442614968 -0500
+++ /src/main/java/org/quixbugs/SHORTEST_PATH_LENGTHS.java	2022-09-21 17:30:15.527741226 -0500
@@ -28,17 +28,17 @@
                 } else {
                     length_by_path.put(edge, INF);
                 }
-            }
-        }
-        for (int k = 0; k < numNodes; k++) {
-            for (int i = 0; i < numNodes; i++) {
-                for (int j = 0; j < numNodes; j++) {
-                    int update_length = Math.min(length_by_path.get(Arrays.asList(i,j)),
-                            length_by_path.get(Arrays.asList(i,k)) + length_by_path.get(Arrays.asList(j,k)));
-                    length_by_path.put(Arrays.asList(i,j), update_length);
-                }
-            }
-        }
-        return length_by_path;
+		return length_by_path;
+	    }
+	}
+	for (int k = 0; k < numNodes; k++) {
+	    for (int i = 0; i < numNodes; i++) {
+		for (int j = 0; j < numNodes; j++) {
+		    int update_length = Math.min(length_by_path.get(Arrays.asList(i, j)), ((length_by_path.get(Arrays.asList(i, k))) + (length_by_path.get(Arrays.asList(j, k)))));
+		    length_by_path.put(Arrays.asList(i, j), update_length);
+		}
+	    }
+	}
+	return length_by_path;
     }
 }
